{"version":3,"sources":["List.js","App.js","serviceWorker.js","index.js"],"names":["list","project","type","objectID","madeUsing","url","desc","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchWordpress","setState","searchTerm","searchReact","searchHTML","searchFreelance","searchAll","state","onDismiss","bind","assertThisInitialized","onSearchChange","id","updatedList","filter","y","event","target","value","_this$state","react_default","a","createElement","className","App_Search","onChange","App_Button","onClick","text","App_Table","pattern","React","Component","Search","_handleKeyPress","e","key","preventDefault","_this$props","children","onKeyPress","placeholder","Table","_ref","item","toLowerCase","includes","map","x","href","rel","Button","_ref2","_ref2$className","_ref2$text","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOA+CeA,SA/CF,CACT,CACAC,QAAQ,gBACRC,KAAK,UACLC,SAAS,IACTC,UAAU,8BACVC,IAAI,yBACJC,KAAK,oGAGL,CACIL,QAAQ,2BACRC,KAAK,UACLC,SAAS,IACTC,UAAU,wBACVC,IAAI,iCACJC,KAAK,qDAET,CACIL,QAAQ,yBACRC,KAAK,UACLC,SAAS,IACTC,UAAU,YACVC,IAAI,kCACJC,KAAK,+DAGT,CACIL,QAAQ,iBACRC,KAAK,mBACLC,SAAS,IACTC,UAAU,QACVC,IAAI,wCACJC,KAAK,sEAEL,CACAL,QAAQ,4BACRC,KAAK,kBACLC,SAAS,IACTC,UAAU,QACVC,IAAI,2BACJC,KAAK,8DCjCPC,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA0BVQ,gBAAkB,WACdP,EAAKQ,SAAS,CACVC,WAAY,eA7BDT,EAiCnBU,YAAc,WACVV,EAAKQ,SAAS,CACVC,WAAY,WAnCDT,EAuCnBW,WAAa,WACTX,EAAKQ,SAAS,CACVC,WAAY,UAzCDT,EA6CnBY,gBAAkB,WACdZ,EAAKQ,SAAS,CACVC,WAAY,eA/CDT,EAmDnBa,UAAY,WACRb,EAAKQ,SAAS,CACVC,WAAY,MAnDhBT,EAAKc,MAAQ,CACTvB,OACAkB,WAAY,IAIhBT,EAAKe,UAAYf,EAAKe,UAAUC,KAAff,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACjBA,EAAKkB,eAAiBlB,EAAKkB,eAAeF,KAApBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KATPA,yEAaTmB,GACN,IACMC,EAAcjB,KAAKW,MAAMvB,KAAK8B,OADpB,SAAAC,GAAC,OAAIA,EAAE5B,WAAayB,IAEpChB,KAAKK,SAAS,CACVjB,KAAM6B,2CAICG,GACXpB,KAAKK,SAAS,CACVC,WAAYc,EAAMC,OAAOC,yCAkCxB,IAAAC,EAIDvB,KAAKW,MAFLL,EAFCiB,EAEDjB,WACAlB,EAHCmC,EAGDnC,KAEJ,OAASoC,EAAAC,EAAAC,cAAA,OACDC,UAAY,OAEhBH,EAAAC,EAAAC,cAAA,OACIC,UAAY,aADhB,+BAHK,IAI2DH,EAAAC,EAAAC,cAChEE,EADgE,CACzDN,MACHhB,EAEJuB,SACI7B,KAAKe,iBAMTS,EAAAC,EAAAC,cAAA,gBACOF,EAAAC,EAAAC,cAAEI,EAAF,CAASC,QACZ/B,KAAKU,UAETsB,KAAO,QAJP,IAIiBR,EAAAC,EAAAC,cAAEI,EAAF,CAASC,QACtB/B,KAAKI,gBAET4B,KAAO,cAPP,IAOuBR,EAAAC,EAAAC,cAAEI,EAAF,CAASC,QAC5B/B,KAAKO,YAETyB,KAAO,UAVP,IAUmBR,EAAAC,EAAAC,cAAEI,EAAF,CAASC,QACxB/B,KAAKQ,WAETwB,KAAO,SAbP,IAakBR,EAAAC,EAAAC,cAAEI,EAAF,CAASC,QACvB/B,KAAKS,gBAETuB,KAAO,cAhBP,KAfK,IA+B2BR,EAAAC,EAAAC,cAChCO,EADgC,CAC1B7C,KACFA,EAEJ8C,QACI5B,EAEJM,UACIZ,KAAKY,oBAvGHuB,IAAMC,WAoHlBC,6MACFC,gBAAkB,SAACC,GACD,UAAVA,EAAEC,KACFD,EAAEE,0FAKD,IAAAC,EAKD1C,KAAKJ,MAHL0B,EAFCoB,EAEDpB,MACAO,EAHCa,EAGDb,SACAc,EAJCD,EAIDC,SAEJ,OAASnB,EAAAC,EAAAC,cAAA,WAELF,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAA,eAEIiB,EAFJ,KAGSnB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOpC,KAAK,OAAOgC,MAAOA,EAAOO,SAAUA,EAAUe,WAAY5C,KAAKsC,gBAAkBO,YAAY,uBAAzG,KALT,aAhBSV,IAAMC,WAoCrBU,EAAQ,SAAAC,GAAA,IA1JMzC,EA2JZlB,EADM2D,EACN3D,KACA8C,EAFMa,EAENb,QACAtB,EAHMmC,EAGNnC,UAHM,OAKVY,EAAAC,EAAAC,cAAA,eAEItC,EAAK8B,QAjKOZ,EAiKW4B,EAjKI,SAACc,GAAD,OAAW1C,GAAc0C,EAAK1D,KAAK2D,cAAcC,SAAS5C,EAAW2C,gBAAkBD,EAAK3D,QAAQ4D,cAAcC,SAAS5C,EAAW2C,gBAAkBD,EAAKxD,UAAUyD,cAAcC,SAAS5C,EAAW2C,gBAAkBD,EAAKvD,IAAIwD,cAAcC,SAAS5C,EAAW2C,gBAAkBD,EAAKtD,KAAKuD,cAAcC,SAAS5C,EAAW2C,kBAiK9TE,IAAI,SAAAC,GAAC,OAAI5B,EAAAC,EAAAC,cAAA,OAAMC,UAAY,eACxDa,IACIY,EAAE7D,UAENiC,EAAAC,EAAAC,cAAA,OACIC,UAAY,gBADhB,IACiCH,EAAAC,EAAAC,cAAA,uBAAwB,IAAI0B,EAAE/D,SAC/DmC,EAAAC,EAAAC,cAAA,OACIC,UAAY,gBADhB,IACiCH,EAAAC,EAAAC,cAAA,6BAA8B,IAAI0B,EAAE5D,UAAU,KAC/EgC,EAAAC,EAAAC,cAAA,OACIC,UAAY,gBADhB,IACiCH,EAAAC,EAAAC,cAAA,uBAAwB,IAAI0B,EAAE9D,KAAK,KACpEkC,EAAAC,EAAAC,cAAA,gBACOF,EAAAC,EAAAC,cAAEI,EAAF,CAASE,KAAO,mBACvBD,QACI,kBAAMnB,EAAUwC,EAAE7D,YAFf,MAX+B,IAcfiC,EAAAC,EAAAC,cAAA,gBAASF,EAAAC,EAAAC,cAAA,kBAAWF,EAAAC,EAAAC,cAAA,KAAI2B,KAC3CD,EAAE3D,IAEN4B,OAAS,SACTiC,IAAM,uBAJqC,0BAApB,KAde,IAkBqC9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,4BAAL,KAAwC0B,EAAE1D,SApB1J,MA4Bc6D,EAAS,SAAAC,GAAA,IACPzB,EADOyB,EACPzB,QADO0B,EAAAD,EAEP7B,iBAFO,IAAA8B,EAEK,GAFLA,EAAAC,GAAAF,EAGPb,SAHOa,EAIPxB,aAJO,IAAA0B,EAIA,GAJAA,EAAA,OAMXlC,EAAAC,EAAAC,cAAA,UAEJK,QACIA,EAEJJ,UACIA,EAEJrC,KAAO,UARH,IASA0C,EATA,MAkBWrC,IC7MPgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8dae3360.chunk.js","sourcesContent":["const list = [\n    {\n    project:'Giannades.com',\n    type:'Website',\n    objectID:'0',\n    madeUsing:'HTML,CSS,Bootstrap,three.js',  \n    url:'https://giannades.com/',\n    desc:'Whole project with design and built. Used three.js animation library for the birds in the intro.'\n        \n    },\n    {\n        project:'Sbrotherscomposite.co.uk',\n        type:'Website',\n        objectID:'1',\n        madeUsing:'HTML,Bootstrap,CSS,JS',  \n        url:'http://sbrotherscomposite.com/',\n        desc:'Whole project front end development.Not my design'\n    },\n    {\n        project:'Sowl-restaurant.com.au',\n        type:'Website',\n        objectID:'2',\n        madeUsing:'Wordpress',\n        url:'https://sowl-restaurant.com.au/',\n        desc:'Freelance project whole implementation,SEO,Google Analytics'\n        \n    },\n    {\n        project:'Fun with flags',\n        type:' Web Application',\n        objectID:'3',\n        madeUsing:'React',      \n        url:'http://funwithflags.frankagathos.com/',\n        desc:'A game-quiz to learn nation flags, built with React using REST API'\n    },\n        {\n        project:'Portfolio Projects Search',\n        type:'Web Application',\n        objectID:'4',\n        madeUsing:'React',      \n        url:'http://frankagathos.com/',\n        desc:'A small app with search for better project visualization'\n    }\n    \n    \n]\n\nexport default list;","import React from 'react'\n\nimport './App.css';\n\nimport list from './List';\n\nconst isSearched = (searchTerm) => (item) => !searchTerm || item.type.toLowerCase().includes(searchTerm.toLowerCase()) || item.project.toLowerCase().includes(searchTerm.toLowerCase()) || item.madeUsing.toLowerCase().includes(searchTerm.toLowerCase()) || item.url.toLowerCase().includes(searchTerm.toLowerCase()) || item.desc.toLowerCase().includes(searchTerm.toLowerCase());\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list,\n            searchTerm: '',\n\n\n        };\n        this.onDismiss = this.onDismiss.bind(this); //bind the method to the state\n        this.onSearchChange = this.onSearchChange.bind(this); //bind the method to the state\n\n    }\n\n    onDismiss(id) {\n        const isNotId = y => y.objectID !== id; //if the evaluation for an item is true, the item stays in the list\n        const updatedList = this.state.list.filter(isNotId); //the filter function takes a function to evaluate each item in the list\n        this.setState({\n            list: updatedList\n        }); // update the state of the list\n    }\n\n    onSearchChange(event) {\n        this.setState({\n            searchTerm: event.target.value\n        }); //The event has the value of the input field in its object.\n    }\n\n    searchWordpress = () => {\n        this.setState({\n            searchTerm: 'wordpress'\n        });\n    }\n\n    searchReact = () => {\n        this.setState({\n            searchTerm: 'react'\n        });\n    }\n\n    searchHTML = () => {\n        this.setState({\n            searchTerm: 'HTML'\n        });\n    }\n\n    searchFreelance = () => {\n        this.setState({\n            searchTerm: 'Freelance'\n        });\n    }\n\n    searchAll = () => {\n        this.setState({\n            searchTerm: ''\n        });\n    }\n\n    render() {\n        const {\n            searchTerm,\n            list\n        } = this.state; //destructuring\n        return ( <\n            div className = \"App\" >\n\n            <\n            div className = \"app-title\" > Portfolio Projects Search < /div> <\n            Search value = {\n                searchTerm\n            }\n            onChange = {\n                this.onSearchChange\n            } >\n\n            <\n            /Search> \n\n            <\n            span > < Button onClick = {\n                this.searchAll\n            }\n            text = \"All\" / > < Button onClick = {\n                this.searchWordpress\n            }\n            text = \"Wordpress\" / > < Button onClick = {\n                this.searchReact\n            }\n            text = \"React\" / > < Button onClick = {\n                this.searchHTML\n            }\n            text = \"HTML\" / > < Button onClick = {\n                this.searchFreelance\n            }\n            text = \"Freelance\" / > < /span> <\n            Table list = {\n                list\n            }\n            pattern = {\n                searchTerm\n            }\n            onDismiss = {\n                this.onDismiss\n            }\n            />\n\n            <\n            /div>  \n        )\n    }\n}\n\n\n//Search component\n\nclass Search extends React.Component {\n    _handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n\n        }\n    }\n\n    render() {\n        const {\n            value,\n            onChange,\n            children\n        } = this.props; //destructuring  \n        return ( <\n            div >\n            <\n            form >\n            <\n            div > {\n                children\n            } < /div><div><input type='text' value={value} onChange={onChange} onKeyPress={this._handleKeyPress}  placeholder='Search projects...'/ > < /div> < /\n            form >\n\n            <\n            /div>\n\n        )\n\n    }\n\n\n}\n\n\n//Table  (functional stateless component) \nconst Table = ({\n        list,\n        pattern,\n        onDismiss\n    }) =>\n    <\n    div > {\n        list.filter(isSearched(pattern)).map(x => < div className = 'project-card'\n            key = {\n                x.objectID\n            } >\n            <\n            div className = \"project-name\" > < span > NAME: < /span>{\" \"+x.project}</div >\n            <\n            div className = \"project-name\" > < span > MADE USING: < /span>{\" \"+x.madeUsing+' '}</div >\n            <\n            div className = \"project-name\" > < span > TYPE: < /span>{\" \"+x.type+' '}</div >\n            <\n            span > < Button text = \"REMOVE FROM LIST\"\n            onClick = {\n                () => onDismiss(x.objectID)\n            } > < /Button></span > < span > < button > < a href = {\n                x.url\n            }\n            target = \"_blank\"\n            rel = \"noopener noreferrer\" > VISIT PROJECTS PAGE < /a></button > < /span> <div className='description'><div><span>DESCRIPTION:</span > < /div>{x.desc}</div >\n            <\n            /div>)} < /\n            div >\n\n\n\n            //Button (functional stateless component) \n            const Button = ({\n                    onClick,\n                    className = '',\n                    children,\n                    text = ''\n                }) =>\n                <\n                button\n            onClick = {\n                onClick\n            }\n            className = {\n                className\n            }\n            type = \"button\" > {\n                text\n            } <\n            /button>\n\n\n\n\n\n\n            export default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nif (module.hot) {\nmodule.hot.accept()\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}